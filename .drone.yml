kind: pipeline
type: docker
name: lint

# steps:
#     - name: lint
#       image: golangci/golangci-lint
#       commands:
#           - golangci-lint run

# ---
# kind: pipeline
# type: docker
# name: greeterdocker

# steps:
#     - name: docker (greeter-service)
#       image: plugins/docker
#       settings:
#           dockerfile: greeter-service/Dockerfile
#           username:
#               from_secret: gh_username
#           password:
#               from_secret: gh_token
#           registry: docker.pkg.github.com
#           repo: docker.pkg.github.com/vesose/example-micro/greeter
#       when:
#           branch:
#               - master
#               - develop
#           event:
#               exclude:
#                   - pull_request

# depends_on:
#     - lint

# ---
# kind: pipeline
# type: docker
# name: counterdocker

# steps:
#     - name: docker (counter-service)
#       image: plugins/docker
#       settings:
#           dockerfile: counter-service/Dockerfile
#           username:
#               from_secret: gh_username
#           password:
#               from_secret: gh_token
#           registry: docker.pkg.github.com
#           repo: docker.pkg.github.com/vesose/example-micro/counter
#       when:
#           branch:
#               - master
#               - develop
#           event:
#               exclude:
#                   - pull_request

# depends_on:
#     - lint

# ---
# kind: pipeline
# type: docker
# name: loggerdocker

# steps:
#     - name: docker (logger-service)
#       image: plugins/docker
#       settings:
#           dockerfile: logger-service/Dockerfile
#           username:
#               from_secret: gh_username
#           password:
#               from_secret: gh_token
#           registry: docker.pkg.github.com
#           repo: docker.pkg.github.com/vesose/example-micro/logger
#       when:
#           branch:
#               - master
#               - develop
#           event:
#               exclude:
#                   - pull_request

# depends_on:
#     - lint

# ---
# kind: pipeline
# type: docker
# name: clientdocker

# steps:
#     - name: docker (client)
#       image: plugins/docker
#       settings:
#           dockerfile: client/Dockerfile
#           username:
#               from_secret: gh_username
#           password:
#               from_secret: gh_token
#           registry: docker.pkg.github.com
#           repo: docker.pkg.github.com/vesose/example-micro/client
#       when:
#           branch:
#               - master
#               - develop
#           event:
#               exclude:
#                   - pull_request

# depends_on:
#     - lint

# ---
# kind: pipeline
# type: docker
# name: start services

steps:
    - name: etcd
      image: "bitnami/etcd:latest"
      environment:
          ALLOW_NONE_AUTHENTICATION: yes
          ETCD_ADVERTISE_CLIENT_URLS: http://etcd:2379
      detach: true

    - name: nats
      image: nats
      detach: true

    - name: redis
      image: "bitnami/redis:latest"
      environment:
          ALLOW_EMPTY_PASSWORD: yes
      detach: true

    - name: test
      image: redis
      commands:
          - sleep 5
          - redis-cli -h redis ping
          - redis-cli -h redis set FOO bar
          - redis-cli -h redis get FOO

    - name: greeter
      image: docker.pkg.github.com/vesose/example-micro/greeter:latest
      environment:
          ALLOW_NONE_AUTHENTICATION: yes
      commands:
          - sleep 10
          - /app/greeter-service --registry_address=etcd:2379

image_pull_secrets:
    - dockerconfig
    # depends_on:
#     - greeterdocker
#     - counterdocker
#     - loggerdocker
#     - clientdocker

# als Secret dockerconfigjson
# {
# 	"auths": {
# 		"docker.pkg.github.com": {
# 			"auth": "YW11cmRhY2E6c3VwZXJzZWNyZXRwYXNzd29yZA=="
# 		}
# 	}
# }

